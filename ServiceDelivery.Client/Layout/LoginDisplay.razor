@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject NetworkStatusService NetworkStatusService
@inject IJSRuntime JS


<AuthorizeView>
    <Authorized>
        <a href="authentication/profile">Hello, @context.User?.Identity?.Name!</a>
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>
    </Authorized>
    <NotAuthorized>
        @* <a href="authentication/register">Register</a> *@
        <button class="nav-link btn btn-link" @onclick="Login">Log in</button>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task BeginSignOut(MouseEventArgs args)
    {
        if (!NetworkStatusService.IsOnline)
        {
            await NetworkStatusService.ShowToast();
            return;
        }

        Navigation.NavigateToLogout("authentication/logout");
    }
}
@code {
    private async Task Login()
    {
        if (!NetworkStatusService.IsOnline)
        {
            await NetworkStatusService.ShowToast();
            return;
        }

        Navigation.NavigateTo("authentication/login");
    }
}
