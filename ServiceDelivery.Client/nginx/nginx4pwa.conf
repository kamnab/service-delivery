# To support offline caching, 
#   automatic updates, 
#   and optionally push notifications in your Blazor WebAssembly PWA when served via NGINX in Docker, 

#here's what you need:
# ✅ 1. Make Sure Blazor PWA is Set Up Correctly
# Your Blazor WASM project should already include:
# service-worker.published.js
# service-worker-assets.js
# Manifest (manifest.webmanifest)
# Registration in index.html

# ✅ 2. Update nginx.conf for Proper Caching & Routing
# Here's an updated nginx.conf that ensures:
# Proper Cache-Control headers
# Offline-friendly routing
# Respect for the service worker update process

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    gzip on;
    gzip_types text/plain text/css application/javascript application/json application/xml+rss application/font-woff2;

    # Server for HTTP (port 80) to redirect to HTTPS
    server {
        listen 80;
        server_name localhost;

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        # Path to SSL certificates
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

        # SSL settings (optional, but recommended for security)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;

        # Your application
        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        # Let service worker be cached aggressively
        location ~* \.(?:js|css|woff2?|json|webmanifest|ttf|eot|svg|ico)$ {
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # Don't cache the service worker itself
        location = /service-worker.published.js {
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        }

        location = /service-worker-assets.js {
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        }

        # Push notification endpoint (optional if using backend)
        # location /api/notifications {
        #     proxy_pass http://backend:5000;
        # }
    }
}
