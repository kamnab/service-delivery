# mkcert -install
# mkcert -cert-file nginx/certs/localhost.pem -key-file nginx/certs/localhost-key.pem localhost 127.0.0.1

worker_processes 1;
events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # # Enable Brotli compression (optional, works with pre-compressed files)
    # brotli on;
    # brotli_static on;

    # Enable gzip (optional, fallback)
    gzip on;
    gzip_static on;
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;

    server {
        listen 80;
        server_name localhost 192.168.0.12 oer.local;  # Catch all requests and handle HTTP to HTTPS redirection
        # Redirect all HTTP traffic to HTTPS
        # return 301 https://$host$request_uri;

        add_header 'Blazor-Environment' 'replaceme';
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
    }

    server {
        listen              443 ssl;
        server_name         localhost 192.168.0.12 oer.local;  # Catch all requests and handle HTTP to HTTPS redirection

        ssl_certificate     /etc/nginx/certs/oer.local.pem;
        ssl_certificate_key /etc/nginx/certs/oer.local-key.pem;

        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        # Optional: cache control headers for static assets
        location ~* \.(js|css|woff2?|ttf|eot|ico|jpg|jpeg|png|gif|svg|webp|br|gz)$ {
            expires 30d;
            add_header Cache-Control "public";
            try_files $uri =404;
        }
    }
}
