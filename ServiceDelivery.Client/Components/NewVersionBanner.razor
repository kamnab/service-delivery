@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@inject UpdateNotifier Notifier

@if (updateAvailable)
{
    <div class="update-banner">
        A new version is available.
        <button @onclick="Reload">Reload</button>
    </div>
}

@code {
    private bool updateAvailable = false;

    protected override async Task OnInitializedAsync()
    {
        Notifier.OnUpdateAvailable += () =>
        {
            updateAvailable = true;
            StateHasChanged();
        };

        var assemblyName = typeof(Program).Assembly.GetName().Name;

        await JS.InvokeVoidAsync("eval", $@"
window.addEventListener('app-update-available', () => {{
DotNet.invokeMethodAsync('{assemblyName}', 'NotifyUpdateAvailable');
}});
");
    }

    private void Reload()
    {
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }
}
