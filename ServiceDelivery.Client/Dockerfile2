# --------- Step 1: Build Blazor WebAssembly PWA ---------
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build

WORKDIR /src

# Copy csproj and restore
COPY ["ServiceDelivery.Client.csproj", "./"]
RUN dotnet restore "ServiceDelivery.Client.csproj"

# Copy everything else and build
COPY . .
WORKDIR /src

# Install Python required by wasm-tools
RUN apt-get update && apt-get install -y python3 && \
    ln -s /usr/bin/python3 /usr/bin/python

# Install wasm workload for AOT
RUN dotnet workload install wasm-tools-net8

# Publish with AOT, trimming, and Brotli compression
RUN dotnet publish "ServiceDelivery.Client.csproj" \
    -c Release \
    -o /app/publish

# --------- Step 2: Install Avahi and Serve using Nginx ---------
FROM ubuntu:20.04 AS final

# Install dependencies: Avahi, Nginx, and other utilities
RUN apt-get update && apt-get install -y \
    nginx \
    avahi-daemon \
    dbus \
    bash \
    curl \
    && rm -rf /var/cache/apt/*

# Copy build output
COPY --from=build /app/publish/wwwroot /usr/share/nginx/html

# Copy Nginx config and SSL certs
COPY ./nginx/nginx.conf /etc/nginx/nginx.conf
COPY ./nginx/certs/localhost.pem /etc/nginx/certs/localhost.pem
COPY ./nginx/certs/localhost-key.pem /etc/nginx/certs/localhost-key.pem

# Copy Avahi daemon config
COPY ./nginx/avahi/avahi-daemon.conf /etc/avahi/avahi-daemon.conf
# Copy HTTP service definition
COPY ./nginx/avahi/http.service /etc/avahi/services/http.service

# Optional: secure the cert files
RUN chmod 600 /etc/nginx/certs/*

# Expose HTTP and HTTPS ports
EXPOSE 80
EXPOSE 443

# Install tini for better signal handling (optional)
RUN apt-get install -y tini
ENTRYPOINT ["/usr/bin/tini", "--"]

CMD ["sh", "-c", "\
    mkdir -p /var/run/dbus && \
    dbus-uuidgen > /etc/machine-id && \
    dbus-daemon --system --print-address && \
    avahi-daemon --no-drop-root --debug & \
    nginx -g 'daemon off;'"]

